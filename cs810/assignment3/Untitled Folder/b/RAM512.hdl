// This file is part of the materials accompanying the book
// "The Elements of Computing Systems" by Nisan and Schocken,
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way (in=load, sel=address[0..2], a=ram1, b=ram2, c=ram3, d=ram4, e=ram5, f=ram6, g=ram7, h=ram8);

    RAM64 (in=in, load=ram1, address=address[3..8], out=oRam1);
    RAM64 (in=in, load=ram2, address=address[3..8], out=oRam2);
    RAM64 (in=in, load=ram3, address=address[3..8], out=oRam3);
    RAM64 (in=in, load=ram4, address=address[3..8], out=oRam4);
    RAM64 (in=in, load=ram5, address=address[3..8], out=oRam5);
    RAM64 (in=in, load=ram6, address=address[3..8], out=oRam6);
    RAM64 (in=in, load=ram7, address=address[3..8], out=oRam7);
    RAM64 (in=in, load=ram8, address=address[3..8], out=oRam8);

    Mux8Way16 (a=oRam1, b=oRam2, c=oRam3, d=oRam4, e=oRam5, f=oRam6, g=oRam7, h=oRam8, sel=address[0..2], out=out);
}
